/*
 * Сервис проверки статуса банкоматов
 * Сервис, возвращающий информацию о банкоматах Альфа-Банка
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apisupport@alfabank.ru
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.afal.alfabank.atmapi.atm;

import java.time.OffsetDateTime;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Информация по доступности функций АТМ
 */
@ApiModel(description = "Информация по доступности функций АТМ")
@JsonPropertyOrder({
    ATMStatus.JSON_PROPERTY_AVAILABLE_NOW, ATMStatus.JSON_PROPERTY_DEVICE_ID, ATMStatus.JSON_PROPERTY_RECORD_UPDATED
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-06-29T18:11:23.447287400+07:00[Asia/Novosibirsk]")
public class ATMStatus {
    public static final String JSON_PROPERTY_AVAILABLE_NOW = "availableNow";
    public static final String JSON_PROPERTY_DEVICE_ID = "deviceId";
    public static final String JSON_PROPERTY_RECORD_UPDATED = "recordUpdated";
    private AvailableNow availableNow;
    private Integer deviceId;
    private OffsetDateTime recordUpdated;

    public ATMStatus availableNow(AvailableNow availableNow) {

        this.availableNow = availableNow;
        return this;
    }

    /**
     * Get availableNow
     *
     * @return availableNow
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")
    @JsonProperty(JSON_PROPERTY_AVAILABLE_NOW)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public AvailableNow getAvailableNow() {
        return availableNow;
    }

    public void setAvailableNow(AvailableNow availableNow) {
        this.availableNow = availableNow;
    }

    public ATMStatus deviceId(Integer deviceId) {

        this.deviceId = deviceId;
        return this;
    }

    /**
     * Номер Terminal-ID, присвоенный АТМ в процессинге Банка и передаваемый в информационном обмене между эквайрером, платежной системой и эмитентом.  Значение соответствует ISO-8583 полю 41 (Card Acceptor Terminal Identification)
     *
     * @return deviceId
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Номер Terminal-ID, присвоенный АТМ в процессинге Банка и передаваемый в информационном обмене между эквайрером, платежной системой и эмитентом.  Значение соответствует ISO-8583 полю 41 (Card Acceptor Terminal Identification)")
    @JsonProperty(JSON_PROPERTY_DEVICE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Integer getDeviceId() {
        return deviceId;
    }

    public void setDeviceId(Integer deviceId) {
        this.deviceId = deviceId;
    }

    public ATMStatus recordUpdated(OffsetDateTime recordUpdated) {

        this.recordUpdated = recordUpdated;
        return this;
    }

    /**
     * Дата/время получения последней информации из master-системы
     *
     * @return recordUpdated
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Дата/время получения последней информации из master-системы")
    @JsonProperty(JSON_PROPERTY_RECORD_UPDATED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public OffsetDateTime getRecordUpdated() {
        return recordUpdated;
    }

    public void setRecordUpdated(OffsetDateTime recordUpdated) {
        this.recordUpdated = recordUpdated;
    }

    @Override
    public int hashCode() {
        return Objects.hash(availableNow, deviceId, recordUpdated);
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if(this == o) {
            return true;
        }
        if(o == null || getClass() != o.getClass()) {
            return false;
        }
        ATMStatus atMStatus = (ATMStatus) o;
        return Objects.equals(this.availableNow, atMStatus.availableNow) &&
            Objects.equals(this.deviceId, atMStatus.deviceId) && Objects.equals(this.recordUpdated, atMStatus.recordUpdated);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ATMStatus {\n");
        sb.append("    availableNow: ").append(toIndentedString(availableNow)).append("\n");
        sb.append("    deviceId: ").append(toIndentedString(deviceId)).append("\n");
        sb.append("    recordUpdated: ").append(toIndentedString(recordUpdated)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if(o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

